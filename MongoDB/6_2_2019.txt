> db.semfour.find()
{ "_id" : 1, "name" : "kiran", "age" : 21, "city" : "bangalore", "marks" : [ 45 ] }
{ "_id" : 2, "name" : "chandra", "age" : 21, "city" : "bangalore2", "marks" : [ [ 85 ], [ 75, 85 ] ] }
{ "_id" : 3, "name" : "abhi", "age" : 21, "city" : "bangalore3", "marks" : [ 95 ] }
{ "_id" : 4, "name" : "sagar", "age" : 23, "marks" : [ 25, 33, 56, 70, 84, 85 ] }
{ "_id" : 5, "name" : "manav", "age" : 23, "marks" : [ 95, 25, 84, 45, 74, 42 ] }
> db.semfour.remove({marks:{$lt:50}})
WriteResult({ "nRemoved" : 3 })
> db.semfour.find()
{ "_id" : 2, "name" : "chandra", "age" : 21, "city" : "bangalore2", "marks" : [ [ 85 ], [ 75, 85 ] ] }
{ "_id" : 3, "name" : "abhi", "age" : 21, "city" : "bangalore3", "marks" : [ 95 ] }
>



> db.semfour.remove({},{marks:{$lt:50}})
WriteResult({ "nRemoved" : 2 })
> db.semfour.find()
>


> db.student.deleteOne({_id:5})
{ "acknowledged" : true, "deletedCount" : 1 }
> db.student.find()
{ "_id" : 1, "name" : "kiran", "sem" : 4, "marks" : [ 70, 65, 78, 95, 44 ] }
{ "_id" : 2, "name" : "abhi", "sem" : 4, "marks" : [ 80, 75, 88, 75, 64 ] }
{ "_id" : 3, "name" : "chandra", "sem" : 4, "marks" : [ 80, 65, 88, 95, 84 ] }
{ "_id" : 4, "name" : "ramo", "sem" : 4, "marks" : [ 90, 95, 98, 95, 94 ] }
>


> db.student.find()
{ "_id" : 1, "name" : "kiran", "age" : 21, "city" : "bangalore", "marks" : [ 90, 99, 90 ] }
{ "_id" : 2, "name" : "chandra", "age" : 21, "city" : "bangalore2", "marks" : [ 98, 89, 100 ] }
{ "_id" : 3, "name" : "abhi", "age" : 21, "city" : "bangalore3", "marks" : [ 90, 79, 99 ] }
> db.student.deleteMany({marks:{$lt:90}})
{ "acknowledged" : true, "deletedCount" : 2 }
> db.student.find()
{ "_id" : 1, "name" : "kiran", "age" : 21, "city" : "bangalore", "marks" : [ 90, 99, 90 ] }
>



> db.student.drop()
true
> db.student.find()
>



show deleted records
> db.student.findOneAndDelete({},{_city:"bangalore"})
{
        "_id" : 1,
        "name" : "kiran",
        "age" : 21,
        "city" : "bangalore",
        "marks" : [
                90,
                99,
                90
        ]
}
> db.student.find()
{ "_id" : 2, "name" : "chandra", "age" : 21, "city" : "bangalore2", "marks" : [ 98, 89, 100 ] }
{ "_id" : 3, "name" : "abhi", "age" : 21, "city" : "bangalore3", "marks" : [ 90, 79, 99 ] }
> db.student.findOneAndDelete({_id:1},{_city:"bangalore"})
null





> db.student.findAndModify({query:{_id:2},update:{$inc:{age:1}},upsert:true})
{
        "_id" : 2,
        "name" : "chandra",
        "age" : 21,
        "city" : "bangalore2",
        "marks" : [
                98,
                89,
                100
        ]
}
> db.student.find()
{ "_id" : 2, "name" : "chandra", "age" : 22, "city" : "bangalore2", "marks" : [ 98, 89, 100 ] }
{ "_id" : 3, "name" : "abhi", "age" : 21, "city" : "bangalore3", "marks" : [ 90, 79, 99 ] }
>



db.<colle>.aggregate(pipeline,option)




> db.student.find()
{ "_id" : 2, "name" : "chandra", "age" : 22, "city" : "bangalore2", "marks" : [ 98, 89, 100 ] }
{ "_id" : 3, "name" : "abhi", "age" : 21, "city" : "bangalore3", "marks" : [ 90, 79, 99 ] }
{ "_id" : 1, "name" : "kiran", "age" : 21, "city" : "bangalore", "marks" : [ 90, 99, 90 ] }
> db.student.aggregate({$match:{age:{$eq:21}}} )
{ "_id" : 3, "name" : "abhi", "age" : 21, "city" : "bangalore3", "marks" : [ 90, 79, 99 ] }
{ "_id" : 1, "name" : "kiran", "age" : 21, "city" : "bangalore", "marks" : [ 90, 99, 90 ] }
> db.student.aggregate({$match:{age:21}})
{ "_id" : 3, "name" : "abhi", "age" : 21, "city" : "bangalore3", "marks" : [ 90, 79, 99 ] }
{ "_id" : 1, "name" : "kiran", "age" : 21, "city" : "bangalore", "marks" : [ 90, 99, 90 ] }
>



{$group:{{_id:<expression>,<field1>:{CCOUMULtor1>:<expression1>}...}}
> db.student.find()
{ "_id" : 2, "name" : "chandra", "age" : 22, "city" : "bangalore2", "marks" : [ 98, 89, 100 ] }
{ "_id" : 3, "name" : "abhi", "age" : 21, "city" : "bangalore3", "marks" : [ 90, 79, 99 ] }
{ "_id" : 1, "name" : "kiran", "age" : 21, "city" : "bangalore", "marks" : [ 90, 99, 90 ] }
> db.student.aggregate([{$group:{_id:"$age"}}])
{ "_id" : 21 }
{ "_id" : 22 }


create a collection called as sales that has id item qty and date


 var mydoc=[
{_id:1,item:"RAM",qty:54,price:2700,date:ISODate()}, 
{_id:2,item:"mouse",qty:54,price:700,date:ISODate()}, 
{_id:3,item:"keyboard",qty:301,price:40,date:ISODate()},
{_id:4,item:"pendrive",qty:75,price:1700,date:ISODate()},
{_id:5,item:"keyboard",qty:91,price:1700,date:ISODate()},
{_id:6,item:"mouse",qty:53,price:1700,date:ISODate()}
]
> db.sales.insert(mydoc)
BulkWriteResult({
        "writeErrors" : [ ],
        "writeConcernErrors" : [ ],
        "nInserted" : 6,
        "nUpserted" : 0,
        "nMatched" : 0,
        "nModified" : 0,
        "nRemoved" : 0,
        "upserted" : [ ]
})
> db.sales.find()
{ "_id" : 1, "item" : "RAM", "qty" : 54, "price" : 2700, "date" : ISODate("2019-02-06T04:18:31Z") }
{ "_id" : 2, "item" : "mouse", "qty" : 54, "price" : 700, "date" : ISODate("2019-02-06T04:18:31Z") }
{ "_id" : 3, "item" : "keyboard", "qty" : 301, "price" : 40, "date" : ISODate("2019-02-06T04:18:31Z") }
{ "_id" : 4, "item" : "pendrive", "qty" : 75, "price" : 1700, "date" : ISODate("2019-02-06T04:18:31Z") }
{ "_id" : 5, "item" : "keyboard", "qty" : 91, "price" : 1700, "date" : ISODate("2019-02-06T04:18:31Z") }
{ "_id" : 6, "item" : "mouse", "qty" : 53, "price" : 1700, "date" : ISODate("2019-02-06T04:18:31Z") }
>



group by date
> db.sales.aggregate([{$group:{_id:{year:{$year:"$date"}}}}])
{ "_id" : { "year" : 2019 } }
>


> db.sales.aggregate([{$group:{_id:{month:{$month:"$date"}}}}])
{ "_id" : { "month" : 2 } }
>

> db.sales.aggregate([{$group:{_id:{days:{$dayOfMonth:"$date"}}}}])
{ "_id" : { "days" : 6 } }
>


> db.sales.aggregate([{$group:{_id:{days:{$dayOfYear:"$date"}}}}])
{ "_id" : { "days" : 37 } }
>

> db.sales.aggregate([{$group:{_id:{hour:{$hour:"$date"}}}}])
{ "_id" : { "hour" : 4 } }
>





 db.sales.aggregate([
{$group:{_id:{month:{$month:"$date"},
days:{$dayOfMonth:"$date"},
year:{$year:"$date"}
}
}
}
])



>  db.sales.aggregate([
... {$group:{_id:{month:{$month:"$date"},
... days:{$dayOfMonth:"$date"},
... year:{$year:"$date"}
... }
... }
... }
... ])
{ "_id" : { "month" : 2, "days" : 6, "year" : 2019 } }
>








